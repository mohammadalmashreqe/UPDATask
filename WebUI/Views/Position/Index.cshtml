@model PositionViewModel

<h1 class="bg-info text-white">All Positions</h1>
<a asp-action="Create" class="btn btn-secondary">Create a Positions</a>
<br />
<div class="container">
    <br />
    <div>
        <table id="PositionsTBL" class="display" style="width:100%" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Update</th>
                    <th>Delete</th>
                </tr>
            </thead>

        </table>
    </div>
</div>
<partial name="_notificationPartial" />

<script>
    $(document).ready(function () {
        $("#PositionsTBL").DataTable({
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "ajax": {
                "url": "/Position/LoadData",
                "type": "POST",
                "datatype": "json"
            },
            "columnDefs": [{
                "targets": [0],
                "visible": false,
                "searchable": false
            },
                {
                    "targets": [2,3],

                    "searchable": false,
                    "orderable": false
                }
            ],
            "columns": [
                { "data": "id", "name": "Id", "autoWidth": true },
                { "data": "name", "name": "Name", "autoWidth": true },


                {
                    "render": function (data, type, full, meta) {
                        return '<a class="btn btn-info" href="/Position/Update/' + full.id + '">Update</a>';
                    }
                },
                {
                    data: null,
                    render: function (data, type, row) {
                        return "<a href='#' class='btn btn-danger' onclick=DeleteData('" + row.id + "'); >Delete</a>";
                    }
                },
            ]
        });
    });
     function DeleteData(id) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                var url = '@Url.Content("~/")' + "Position/Delete" ;
                $.post(url, { id: id }, function (data) {

                    if (data) {
                        Swal.fire(
                            'Deleted!',
                            'Item has been deleted.',
                            'success'
                        )
                        //redraw Tabel
                        oTable = $('#PositionsTBL').DataTable();
                        oTable.draw();
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong!',
                            //footer: '<a href="">Why do I have this issue?</a>'
                        })
                    }
                });

            } else {
                return false;
            }
        });
    }
</script>
